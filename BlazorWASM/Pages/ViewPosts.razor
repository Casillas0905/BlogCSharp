@page "/ViewPosts"
@using HttpClients.ClientInterfaces
@using Domain.Models
@using Domain.DTOs
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@inject IPostService postService;
@inject NavigationManager NavigationManager;
@inject ILocationService LocationService;
@inject ICategoryService CategoryService;
@inject IUserService userService;
@attribute [Authorize]

<div class="topnav">
    <a class="active" href="#ViewPosts.razor">Home</a>
    <a href="/CreatePost">Create</a>
    <div class="profile-icon">
        <a href="/ManageProfile"><i class="fas fa-user"></i></a>
    </div>
    
</div>

<hr/>
<input type="text" @bind="title" placeholder="Search.."> <button class=" btn btn-secondary btn-create-post" @onclick="Search">Search</button>
<div class="category">
    <form name="form1" id="form1" action="/action_page.php">
        Category:  <select @bind="category" name="category" id="category" class="form-control">
            @foreach (Category category in categories)
            {
                <option value="@category.category">@category.category</option>
                                                                                                           
            }
            <option value="niull">None</option>
        </select>
    </form>
</div>

<div class="choose-campus">
    <form name="form2" id="form2" action="/action_page.php">
        Choose campus: <select @bind="location" name="location" id="location" class="form-control">
            @foreach (Location location in locations)
            {
                <option value="@location.location">@location.location</option>
                                                                                                                                                
            }
            <option value="niull">None</option>
        </select>
    </form>
</div>



<head>

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Raleway">
    <style>
        body, h1, h2, h3, h4, h5 { font-family: "Raleway", sans-serif; }
        .center-container {
        display: flex;
         justify-content: center;
         align-items: center;
         min-height: 100vh;
                               }
    </style>
</head>
<body class="w3-light-grey">
<div class="w3-content" style="max-width:1400px">

  

    <!-- Grid -->
    <div class="w3-row">
@if (posts == null)
{
    <span>Loading..</span>
}
else if (!posts.Any())
{
    <span>No posts to be found</span>
}
else
{
    @foreach (Post post in posts)
    {
        
      
    
        <div class="w3-col l8 s12">
                    <!-- Blog entry -->
                    <div class="w3-card-4 w3-margin w3-white">
                        <div class="w3-container">
                            <h3><b>@post.Title</b></h3>
                            <!-- Image Box -->
                            <div class="image-box">
                                <img src="@post.imageUrl" alt="Image" style="width:100%">
                            </div>
                        </div>
        
                        <div class="w3-container">
                            <p>@post.description</p>
                            <div class="w3-row">
                                <div class="w3-col m8 s12">
                                    <p><button postId=@post.Id.ToString() @onclick="() => goToPosts(post.Id)"  class="w3-button w3-padding-large w3-white w3-border"><b>READ MORE Â»</b></button></p>
                                </div>
                                <div class="w3-col m4 w3-hide-small">
                                    <!-- Display the number of likes -->
                                    <p><span class="w3-padding-large w3-right"><b>Likes  </b> <span class="w3-badge">0</span></span></p>
                                    </div>
                            </div>

                        </div>
                    </div>
                    <hr>
         
                </div>
    }
}
</div>
</div>
</body>
@code {
    private IEnumerable<Post>? posts;
    private string msg = "";
    private string? location;
    private string? category;
    private string? title;
    private IEnumerable<Location>? locations;
    private IEnumerable<Category>? categories;
    
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;
    private string? email;
    private IEnumerable<Claim>? userClaims;
    private bool isLoggedIn;
    private Task<User> users;

    protected override async Task OnInitializedAsync()
    {
        msg = "";
        try
        {
            AuthenticationState authState = await AuthState;
            ClaimsPrincipal user = authState.User;
            isLoggedIn = user.Identity != null;
        
            if (!isLoggedIn) return;
        
            userClaims = user.Claims;
            email = user.Identity!.Name!;
            users=userService.GetUserByEmail(email);
            locations = await LocationService.findAll();
            categories = await CategoryService.findAll();
            SearchParameters searchParameters = new SearchParameters();
            posts = await postService.FindByParameters(searchParameters);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
     private async Task goToPosts(int id)
    {
        postService.id = id;
        NavigationManager.NavigateTo("/ViewOnePost");
     }

    private async Task Search()
    {
        try
        {
            SearchParameters searchParameters = new SearchParameters(title,location,category,0);
            posts = await postService.FindByParameters(searchParameters);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
}
@page "/ViewPosts"
@using HttpClients.ClientInterfaces
@using Domain.Models
@using Domain.DTOs
@using Microsoft.AspNetCore.Authorization
@inject IPostService postService;
@inject NavigationManager NavigationManager;

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" type="text/css" href="styles.css">
</head>
<body>

<div class="topnav">
    <a class="active" href="#ViewPosts.razor">Home</a>
    <a href="/CreatePost">Create</a>
    <div class="profile-icon">
        <a href="/UserProfile"><i class="fas fa-user"></i></a>
    </div>
    <input type="text" placeholder="Search.." @bind="title">
</div>
</body>

<div class="category">
    <form name="form1" id="form1" action="/action_page.php">
        Category: <select @bind="category" name="subject" id="subject">
            <option value="1" selected="selected">Homework</option>
            <option value="1">Advice</option>
        </select>
    </form>
</div>

<div class="choose-campus">
    <form name="form2" id="form2" action="/action_page.php">
        Choose campus: <select @bind="location" name="subject" id="subject">
            <option value="City Center" selected="selected">Horsens</option>
            <option value="Forest Retreat">Viborg</option>
            <option value="Mountainous Region">Aarhus</option>
        </select>
    </form>
</div>
<button @onclick="Search">Search</button>
@if (posts == null)
{
    <span>Loading..</span>
}
else if (!posts.Any())
{
    <span>No posts to be found</span>
}
else
{
    <div class="users-container">
        @foreach (Post post in posts)
        {

            <div class="row">
                <div class="leftcolumn">
                    <div class="card">
                        <h2>@post.Title</h2>
                        <h5>@post.description</h5>
                        <p>@post.category</p>
                        <div class="fakeimg" style="height:200px;">@post.imageUrl</div>
                        <p>@post.location</p>
                    </div>
                </div>
            </div>
        }
    </div>

@code {
    private IEnumerable<Post>? posts;
    private string msg = "";
    private string? location;
    private int? category;
    private string? title;

    protected override async Task OnInitializedAsync()
    {
        msg = "";
        try
        {
            SearchParameters searchParameters = new SearchParameters();
            posts = await postService.FindByParameters(searchParameters);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
    /* private async Task goToPosts(int id)
    {
        postService.id = id;
        NavigationManager.NavigateTo("/ViewOnePost");
     }*/

    private async Task Search()
    {
        try
        {
            SearchParameters searchParameters = new SearchParameters(title,location,"home",0);
            posts = await postService.FindByParameters(searchParameters);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
}}








  
  
  



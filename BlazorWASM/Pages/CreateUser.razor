@page "/CreateUser"
@using Domain.DTOs
@using Domain.Models
@using HttpClients.ClientInterfaces
@inject IUserService userService;
@inject NavigationManager navMgr
<div class="container h-100">
    		<div class="row h-100">
				<div class="col-sm-10 col-md-8 col-lg-6 mx-auto d-table h-100">
					<div class="d-table-cell align-middle">

						<div class="text-center mt-4">
							<h1 class="h2">Welcome! </h1>
							<p class="lead">
								Register to continue
							</p>
						</div>

						<div class="card">
							<div class="card-body">
								<div class="m-sm-4">
									<div class="text-center">
										<img src="https://th.bing.com/th/id/OIP.117vgAXQTcpc5HVAn4RC4wHaHY?pid=ImgDet&rs=1"  class="img-fluid rounded-circle" width="132" height="132">
									</div>
									<br/>
									
									<form>
										<div class="form-group">
											<label class="label">First Name</label>
											<input  @bind="firstname" class="form-control  smaller-input" type="text" name="firstname" placeholder="Enter your name">
											<label class="label">Email Address</label>
											<input @bind="email" class="form-control smaller-input" type="text" name="email" placeholder="Enter your email">
											<label class="label">Last Name</label>
											<input @bind="lastname" class="form-control smaller-input" type="text" name="lastname" placeholder="Enter your last name">
											<label class="label">Password</label>
											<input @bind="password" class="form-control smaller-input" type="password" name="password" placeholder="Enter a password">
											<label class="label">Confirm Password</label>
											<input @bind="confirmpassword" class="form-control smaller-input" type="password" name="confirmpassword" placeholder="Enter the password again">
											<label class="label">Birthday</label>
											<input @bind="birthday" type="date" class="form-control smaller-input" required autofocus>
										</div>
										@if (!string.IsNullOrEmpty(resultMsg))
                                                {
                                                    <label style="color: @color">@resultMsg</label>
                                                }
										<div >
											
										</div>
									</form>
								</div>
							</div>
						</div>

					</div>
				</div>
			</div>
		</div>
<button @onclick="Create">Create User</button>

@code {
    private string firstname = "";
    private string lastname = "";
    private string resultMsg = "";
    private string color = "";
    private string password = "";
    private string email = "";
    private DateTime? birthday;
    private string confirmpassword = "";
    string domain = "@via.dk";
    
	private async Task Create()
    {
        resultMsg = "";
        try
        {
            if (!(password.Equals(confirmpassword)))
            {
                throw new Exception("Password doesn't match");
            }
            if (!ViaEmail(email))
            {
                throw new Exception("Email is not from Via University domain");
            }
	        if (string.IsNullOrEmpty(firstname) ||string.IsNullOrEmpty(lastname) ||string.IsNullOrEmpty(password) || string.IsNullOrEmpty(confirmpassword) ||string.IsNullOrEmpty(email))
	        {
		        throw new Exception("All fields must have a value");
	        }
            User user = new User(0, firstname, password, email, lastname, birthday.Value.Day, birthday.Value.Month, birthday.Value.Year, false);
            await userService.Create(user);
            firstname = "";
            lastname = "";
            password = "";
            email = "";
            confirmpassword = "";
            resultMsg = "User successfully created";
            color = "green";
	        Thread.Sleep(3000);
	        navMgr.NavigateTo("/LogIn");
	        
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }
    
    private Boolean ViaEmail(string mail)
    {
        if (mail.EndsWith(domain))
            {
            // Email has the domain "@via.dk"
                Console.WriteLine("Email has the domain @via.dk");
                return true;
            }
            else
            {
            // Email does not have the domain "@via.dk"
                Console.WriteLine("Email does not have the domain @via.dk");
                return false;
            }
    }
    

}
@page "/ForgotPassword"
@using Domain.Models
@using HttpClients.ClientInterfaces
@using Microsoft.AspNetCore.Components
@using System.Security.Claims
@inject IUserService UserService;
@inject NavigationManager navMang;
@attribute [Authorize]
<div class="container h-100">
    		<div class="row h-100">
				<div class="col-sm-10 col-md-8 col-lg-6 mx-auto d-table h-100">
					<div class="d-table-cell align-middle">

						<div class="text-center mt-4">
							<h1 class="h2">Change your password </h1>
							<p class="lead">
								Did you forget it?
							</p>
						</div>

						<div class="card">
							<div class="card-body">
								<div class="m-sm-4">
									<div class="text-center">
										<img src="https://th.bing.com/th/id/OIP.117vgAXQTcpc5HVAn4RC4wHaHY?pid=ImgDet&rs=1" alt="Andrew Jones" class="img-fluid rounded-circle" width="132" height="132">
									</div>
									<form>
										<div class="form-group">
                                          <label class="label">Email</label>
                                          <input @bind="email" class="form-control smaller-input" type="text" name="email" placeholder="Enter your email">
                                          <label class="label">New Password</label>
                                          <input @bind="password" class="form-control smaller-input" type="password" name="password" placeholder="Enter the new password">
                                          <label class="label">Confirm New Password</label>
                                          <input @bind="paswwordconfirm" class="form-control smaller-input" type="newpassword" name="newpassword" placeholder="Enter the password again">
                                        
                                        </div>

										
										<div class="button1">
											@if (!string.IsNullOrEmpty(resultMsg))
											{
												<label style="color: @color">@resultMsg</label>
											}
											<br/>
											<a @onclick="Submit" class="btn btn-lg btn-primary">Submit</a>
											<a href="/ManageProfile" class="btn btn-lg btn-primary">Cancel</a>

										</div>
									</form>
								</div>
							</div>
						</div>

					</div>
				</div>
			</div>
		</div>

@code {
	private string email="";
	private string password = "";
	private string paswwordconfirm = "";
	private User user;
	private string resultMsg = "";
	private string color = "";
	[CascadingParameter]
	public Task<AuthenticationState> AuthState { get; set; } = null!;
	private IEnumerable<Claim>? userClaims;
	private bool isLoggedIn;
	private Task<User> users;
	
	protected override async Task OnInitializedAsync()
	{
		user=await UserService.findById(UserService.id);
		AuthenticationState authState = await AuthState;
		ClaimsPrincipal user2 = authState.User;
		isLoggedIn = user2.Identity != null;
        
		if (!isLoggedIn) return;
        
		userClaims = user2.Claims;
		email = user2.Identity!.Name!;
		users=UserService.GetUserByEmail(email);
	}
	
	private async Task Submit()
	{
		if (!(email.ToLower().Equals(user.Email.ToLower())))
		{
			color = "red";
			resultMsg ="Email does not match your email";
			return;
		}
		if (!(password.Equals(paswwordconfirm)))
		{
			color = "red";
			resultMsg ="Passwords does not match";
			return;
		}
		if (password.Length <= 7)
		{
			color = "red";
			resultMsg ="Password must be contain at least 8 characters";
			return;
		}
		UserService.UpdateUser(new User(user.Id,user.FirstName,password,email,user.LastName,user.day,user.month,user.year,user.administrator));
		navMang.NavigateTo("/ResetedPassword");
	}
}
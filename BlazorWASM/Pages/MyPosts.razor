@page "/MyPosts"
@using HttpClients.ClientInterfaces
@using Domain.Models
@using Domain.DTOs
@using Microsoft.AspNetCore.Authorization
@inject IPostService postService;
@inject NavigationManager NavigationManager;
@inject ILocationService LocationService;
@inject ICategoryService CategoryService;
@inject IUserService UserService;
@using Domain.Models
 <div class="w3-row">
@if (posts == null)
{
    <span>Loading..</span>
}
else if (!posts.Any())
{
    <span>No posts to be found</span>
}
else
{
    <div class="blogs-container">
    @foreach (Post post in posts)
    {
        <section class="blogs-section">
            <div class="blog-card">
                <img @post.imageUrl class="blog-image" alt="">
                <h1 class="blog-title">@post.Title</h1>
                <p class="blog-overview">@post.description</p>
                <p><button postId=@post.Id.ToString() @onclick="() => goToPosts(post.Id)"  class="btn dark"><b>Edit</b></button></p>
            </div>
        </section>
    }
    </div>
}
</div>
@code {
    private IEnumerable<Post>? posts;
    private string msg = "";

    protected override async Task OnInitializedAsync()
    {
        msg = "";
        try
        {
            SearchParameters searchParameters = new SearchParameters(null,null,null,UserService.id);
            posts = await postService.FindByParameters(searchParameters);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
     private async Task goToPosts(int id)
    {
        postService.id = id;
        NavigationManager.NavigateTo("/ManagePost");
     }
    
}
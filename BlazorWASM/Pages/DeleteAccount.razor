@page "/DeleteAccount"
@using HttpClients.ClientInterfaces
@using Domain.Models
@inject IUserService UserService;
@inject NavigationManager navMang;

<div class="container h-100">
    		<div class="row h-100">
				<div class="col-sm-10 col-md-8 col-lg-6 mx-auto d-table h-100">
					<div class="d-table-cell align-middle">

						<div class="text-center mt-4">
							<h1 class="h2">Delete your Account </h1>
							<p class="lead">
								Are you sure?
							</p>
						</div>

						<div class="card">
							<div class="card-body">
								<div class="m-sm-4">
									<div class="text-center">
										<img src="https://th.bing.com/th/id/OIP.117vgAXQTcpc5HVAn4RC4wHaHY?pid=ImgDet&rs=1"  class="img-fluid rounded-circle" width="132" height="132">
									</div>
									<form>
										<div class="form-group">
											<label class="label">Email</label>
											<input @bind="email" class="form-control smaller-input" type="text" name="email" placeholder="Enter your email">
											<label class="label">Password</label>
											<input @bind="password" class="form-control smaller-input" type="password" name="password" placeholder="Enter a password">
											<label class="label">Confirm</label>
											<input @bind="confirm" class="form-control smaller-input" type="text"  placeholder="Enter the word: Confirm">
										</div>
										@if (!string.IsNullOrEmpty(resultMsg))
                                                            {
	                                                            <label style="color: @color">@resultMsg</label>
                                                            }
										<div class="button1">
											<a @onclick="Submit" class="btn btn-lg btn-primary">Submit</a>
											<a href="/ManageProfile" class="btn btn-lg btn-primary">Cancel</a>
										</div>
									</form>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>


@code {
	private string email="";
	private string password = "";
	private string confirm = "";
	private User user;
	private string resultMsg = "";
	private string color = "";
	
	protected override async Task OnInitializedAsync()
	{
		user=await UserService.findById(UserService.id);
	}

	private async Task Submit()
	{
		if (!(email.ToLower().Equals(user.Email.ToLower())))
		{
			color = "red";
			resultMsg ="Email does not match";
			return;
		}
		if (!(password.ToLower().Equals(user.Password.ToLower())))
		{
			color = "red";
			resultMsg ="Password does not match";
			return;
		}
		if (!(confirm.Equals("Confirm")))
		{
			color = "red";
			resultMsg ="Write: Confirm";
			return;
		}
		UserService.deleteById(UserService.id);
		navMang.NavigateTo("/ConfirmPage");
	}

}
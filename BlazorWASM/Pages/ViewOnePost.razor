@page "/ViewOnePost"
@using Domain.Models
@using HttpClients.ClientInterfaces
@using Domain.DTOs
@inject IPostService postService;
@inject IUserService userService;
@inject IMessageService messageService;
@inject ICategoryService categoryService;

<div class="blog-single gray-bg">
    <div class="container">
        <div class="row align-items-start">
            <div class="col-lg-8 m-15px-tb">
                <article class="article">
                    <div class="article-img">
                        <p>@imageurl</p>
                        <p>Image goes here</p>
                        <img src=@imageurl title="" alt="">
                    </div>
                    <div class="article-title"><div class="post">
                            <div class="article-title"><div class="menu"> <!-- Move the "menu" div here -->
                                    <div class="dots-menu">
                                        <div class="dot"></div>
                                        <div class="dot"></div>
                                        <div class="dot"></div>
                                    </div>
                                    <ul class="options">
                                        <li><a href="#" onclick="savePost()">Save</a></li>
                                        <li><a href="#" onclick="reportPost()">Report</a></li>
                                    </ul>
                                </div>  <!-- Close the "article-title" div -->
                            </div>
                            <h2>@title</h2>
                      
                            <!-- Rest of your post content goes here -->
                        </div>
                        <div class="media">
                            <div class="avatar">
                            </div>
                            <div class="media-body">
                                <label>@category</label>
                                <button  class="button2" >Follow</button>
                            </div>
                        </div>
                      
                    </div>
                    <div class="article-content">
                        <p>@description</p>
                    </div>
                    
                </article>
                <div class="contact-form article-comment">
                    <h4>Leave a Comment</h4>
                    <form id="contact-form" method="POST">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <textarea name="commment" id="comment" placeholder="Your comment *" rows="4" class="form-control"></textarea>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="send">
                                    <button class="px-btn theme"><span>Submit</span> <i class="arrow"></i></button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="col-lg-4 m-15px-tb blog-aside">
                <!-- Author -->
                <div class="widget widget-author">
                    <div class="widget-title">
                        <h3>Author</h3>
                    </div>
                    <div class="widget-body">
                        <div class="media align-items-center">
                            <div class="avatar">
                                <img src="https://bootdey.com/img/Content/avatar/avatar6.png" title="" alt="">
                            </div>
                            <div class="media-body">
                                <h6>@user.FirstName @user.LastName</h6>
                            </div>
                        </div>
                        
                    </div>
                </div>
                <!-- End Author -->
                <!-- Trending Post -->
                <div class="widget widget-post">
                    <div class="widget-title">
                        <h3>Trending Now</h3>
                    </div>
                    <div class="widget-body">

                    </div>
                </div>
                <!-- End Trending Post -->
                <!-- Latest Post -->
                <div class="widget widget-latest-post">
                    <div class="widget-title">
                        <h3>Latest Post</h3>
                    </div>
                    
                       
                </div>
            </div>
        </div>
    </div>
        </div>

<br/>



<h4> Comments </h4>
<br/>
<br/>

<div class="container bootstrap snippets bootdey">
       <div class="row">
   		<div class="col-md-12">
   		    <div class="blog-comment">
              
   				<ul class="comments">
   				<li class="clearfix">
   				  <img src="https://bootdey.com/img/Content/user_1.jpg" class="avatar" alt="">
   				  <div class="post-comments">
   				      <p class="meta"><a href="#">Nombre del autor del comentario</a> says : <i class="pull-right"><a href="#"></a></i></p>
   				      <p>
   				         Comentario
   				      </p>
   				  </div>
   				</li>
                </ul>
   			</div>
   		</div>
   	</div>
   </div>
            

@code {

    private string msg = "";
    private string color = "";
    Post post;
    Category categories;
    User user;
    private string title;
    private string category;
    private string description;
    private string imageurl;

    protected override async Task OnInitializedAsync()
    {
        msg = "";
        try
        {
            post = await postService.GetByIdAsync(7);
            title = post.Title;
            description = post.description;
            categories = await categoryService.findById(post.category);
            user = await userService.findById(post.userID);
            category =categories.category;
            imageurl = post.imageUrl;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
   
    
    public async Task AddMessage()
    {
        msg = "";
        
        try
        {
           // MessageCreationDto dto = new(message,users.Id,postId);
            //await messageService.CreateAsync(dto);
            color = "green";
            msg = "Post created";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }

    }
}